/*
 * This file is generated by jOOQ.
 */
package com.examsystem.jooq.generated.tables.records;


import com.examsystem.jooq.generated.tables.ExaminationQuestions;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ExaminationQuestionsRecord extends UpdatableRecordImpl<ExaminationQuestionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>examination_questions.examination_id</code>.
     */
    public void setExaminationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>examination_questions.examination_id</code>.
     */
    public Integer getExaminationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>examination_questions.question_id</code>.
     */
    public void setQuestionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>examination_questions.question_id</code>.
     */
    public Integer getQuestionId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExaminationQuestionsRecord
     */
    public ExaminationQuestionsRecord() {
        super(ExaminationQuestions.EXAMINATION_QUESTIONS);
    }

    /**
     * Create a detached, initialised ExaminationQuestionsRecord
     */
    public ExaminationQuestionsRecord(Integer examinationId, Integer questionId) {
        super(ExaminationQuestions.EXAMINATION_QUESTIONS);

        setExaminationId(examinationId);
        setQuestionId(questionId);
        resetChangedOnNotNull();
    }
}
